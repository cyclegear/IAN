/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package form_port_app;

import static form_port_app.InvAdj.UserTypeBox;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author WStevens
 */

// this class creates pop up window that prompts user for password when pressing the adming panel button
public class Password extends javax.swing.JDialog {

    /**
     * Creates new form DL_Password
     * @param parent
     * @param modal
     * @throws java.sql.SQLException
     */
    public Password(java.awt.Frame parent, boolean modal) throws SQLException {
       
        super(parent, modal);
        initComponents();
    }

private static Component frame;
     
public static String dlU;
public static String dlPass;
public static String icPass;
public static String dlPassChk;
public static String icPassChk;
public static String usernameInput;
public static String passwordInput;


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Password = new javax.swing.JLabel();
        Sumbit_button = new javax.swing.JButton();
        PasswordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Vera Sans Mono", 1, 14))); // NOI18N

        Password.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Password.setText("Password");

        Sumbit_button.setBackground(new java.awt.Color(51, 255, 0));
        Sumbit_button.setText("Submit");
        Sumbit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sumbit_buttonActionPerformed(evt);
            }
        });

        PasswordField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Sumbit_button)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Password, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(PasswordField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Sumbit_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // checks password in database and closes the window if it is correct
    // this checks if the drop down in invadj class is DL or IC and the corresponding password
    private void Sumbit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sumbit_buttonActionPerformed
      if (UserTypeBox.getSelectedItem().toString().equals("DL")) {    
        try { 
            DL_Password();
        } catch (SQLException ex) {
            Logger.getLogger(Password.class.getName()).log(Level.SEVERE, null, ex);
        }
        dlPassword_chk();
        if (dlPassChk.equals("good")) {
        this.dispose();
        }        
      }
       if (UserTypeBox.getSelectedItem().toString().equals("IC")) {
           try { 
            IC_Password();
        } catch (SQLException ex) {
            Logger.getLogger(Password.class.getName()).log(Level.SEVERE, null, ex);
        }
        icPassword_chk();
        if (icPassChk.equals("good")) {
        this.dispose();
        }
       }
    }//GEN-LAST:event_Sumbit_buttonActionPerformed

    // checks password in database and closes the window if it is correct
    // this checks if the drop down in invadj class is DL or IC and the corresponding password
    private void PasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordFieldKeyPressed
     if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
       if (UserTypeBox.getSelectedItem().toString().equals("DL")) {
        try { 
            DL_Password();
        } catch (SQLException ex) {
            Logger.getLogger(Password.class.getName()).log(Level.SEVERE, null, ex);
        }
        dlPassword_chk();
        if (dlPassChk.equals("good")) {
        this.dispose();
        }
       }
       if (UserTypeBox.getSelectedItem().toString().equals("IC")) {
           try { 
            IC_Password();
        } catch (SQLException ex) {
            Logger.getLogger(Password.class.getName()).log(Level.SEVERE, null, ex);
        }
        icPassword_chk();
        if (icPassChk.equals("good")) {
        this.dispose();
        }
      }
     }
    }//GEN-LAST:event_PasswordFieldKeyPressed

    // checks the database for the correct password
    public static void DL_Password() throws SQLException {
            char[] pass = PasswordField.getPassword();
            passwordInput = String.valueOf(pass);
            if (!passwordInput.equals("")) {
                 //   usernameInput = DL_Username_TextField.getText();
                 //   passwordInput = PasswordField.getText();
                    Statement s = DBConnect.connection.createStatement();
                 
                    String selTable1 = "Select DL As rslt1, Password As rslt2 FROM dl WHERE Password = '" + passwordInput + "'";
                    s.execute(selTable1);
                    ResultSet rs1 = s.getResultSet();

                  if (rs1.next()){
                  //  dlU = rs1.getString("rslt1");
                    dlPass = rs1.getString("rslt2");
                    dlPassChk = "good";
                  } else {
                    dlPassChk = "bad";
                  }
                } else {
              // JOptionPane.showMessageDialog(frame, "Please enter a password");
                dlPassChk = "bad";
                }
            }        
           

   public static void dlPassword_chk() {
       if (dlPassChk.equals("good") /*&& !PasswordField.getPassword().equals("")*/ ) {
          // JOptionPane.showMessageDialog(frame, "Correct password");
        String[] args = null;
        InvAdj_Admin.main(args);
        } else {
            JOptionPane.showMessageDialog(frame, "Please enter correct password");
            dlPassChk = "bad";
        }
}
   
   public static void icPassword_chk() {
       if (icPassChk.equals("good") /*&& !PasswordField.getPassword().equals("")*/ ) {
          // JOptionPane.showMessageDialog(frame, "Correct password");
        String[] args = null;
        InvAdj_Admin.main(args);
        } else {
          JOptionPane.showMessageDialog(frame, "Please enter correct password");
            icPassChk = "bad";
        }
}
   
    // checks password in database and closes the window if it is correct
    // this checks if the drop down in invadj class is DL or IC and the corresponding password
   public static void IC_Password() throws SQLException {
            char[] pass = PasswordField.getPassword();
            passwordInput = String.valueOf(pass);
            if (!passwordInput.equals("")) {
                 //   usernameInput = DL_Username_TextField.getText();
                 //   passwordInput = PasswordField.getText();
                    Statement s = DBConnect.connection.createStatement();
                 
                    String selTable1 = "Select IC As rslt1, Password As rslt2 FROM ic WHERE Password = '" + passwordInput + "'";
                    s.execute(selTable1);
                    ResultSet rs1 = s.getResultSet();

                  if (rs1.next()){
                    dlU = rs1.getString("rslt1");
                    icPass = rs1.getString("rslt2");
                    icPassChk = "good";
                  } else {
                    icPassChk = "bad";
                  }
                  } else {
               // JOptionPane.showMessageDialog(frame, "Please enter a password");
                icPassChk = "bad";
                }
                }        
   
    /**
     * @param args the command line arguments
     * @throws java.sql.SQLException
     */
    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Password.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Password dialog = null;
                try {
                    dialog = new Password(new javax.swing.JFrame(), true);
                } catch (SQLException ex) {
                    Logger.getLogger(Password.class.getName()).log(Level.SEVERE, null, ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        // System.exit(0);
                      //  dispose();
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Password;
    public static javax.swing.JPasswordField PasswordField;
    public static javax.swing.JButton Sumbit_button;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
